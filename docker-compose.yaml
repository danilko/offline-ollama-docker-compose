services:
  # download ollama model with allow network access
  ollama-downloader:
    image: docker.io/ollama/ollama:latest
    container_name: ollama-downloader
    pull_policy: missing
    volumes:
      - /home/danilko/ollama-service/ollama-data/:/root/.ollama:z
      - /home/danilko/ollama-service/download-entry-point.sh:/usr/local/bin/download-entry-point.sh:rwxz
    networks:
      - default
    tty: true
    entrypoint: ["/usr/bin/bash", "/usr/local/bin/download-entry-point.sh"]
    restart: "no"

  ollama:
    depends_on:
      - ollama-downloader
    image: docker.io/ollama/ollama:latest
    pull_policy: missing
    container_name: ollama
    tty: true
    volumes:
      - /home/danilko/ollama-service/ollama-data/:/root/.ollama:z
    networks:
      - isolated_net
    ports:
      - "11434:11434"  # optional if exposing to host
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - CUDA_VISIBLE_DEVICES=0
      - LOG_LEVEL=debug
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
              count: all

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    pull_policy: missing
    volumes:
      - open-webui-data:/app/backend/data:rwz
    depends_on:
      - ollama
    ports:
      - 8080:8080
    environment:
      - 'OLLAMA_BASE_URL=http://ollama:11434'
      - 'WEBUI_SECRET_KEY=test'
      - 'WEBUI_AUTH=False'
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    networks:
      - isolated_net

networks:
  default:
  isolated_net:
    driver: bridge
    internal: true

volumes:
  open-webui-data: {}
